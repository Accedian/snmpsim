openapi: 3.0.0
info:
  license:
    name: BSD License
  version: '1.0.0'
  title: 'SNMP Simulator Monitoring REST API'
  description: >
    Monitoring API provides the insight for the operator to how SNMP Simulator
    is doing. That includes health reporting and operational statistics.
    The data is provided by running SNMP Simulator, REST API is essentially
    read-only.

    The `/processes` endpoint exposes the details on SNMP simulator health
    as a set of UNIX processes. It's mostly concern with processes being
    present, resources being consumed reasonably and internal faults noted.

    Typical use of the `/processes` endpoint by some monitoring application
    can be a parameterized REST API call designed to reveal missing processes,
    overly consumed system resources or serious application-specific errors
    occurring in SNMP simulator.

    The `/subsystems` endpoint is all about SNMP traffic being handled by
    certain simulator subsystem. Provided data is mostly ever increasing
    counters reflecting the activity of the subsystem. The consumer of this
    endpoint is expected to poll it periodically pushing collected data
    into a time-series database for dynamics computing and data aggregation.

servers:
  - url: https://virtserver.swaggerhub.com/etingof/snmpsimd-monitoring/1.0.0

paths:
  /processes:
    get:
      description: >
        Collection of SNMP simulator system process information.
      summary: >
        Search for and list process information.
      operationId: listProcesses
      tags:
        - processes
      parameters:
        - name: newer
          in: query
          description: >
            Select processes with uptime lesser than specified.
          required: false
          schema:
            type: integer
        - name: larger
          in: query
          description: >
            Select processes with the amount of consumed memory larger
            than specified.
          required: false
          schema:
            type: integer
        - name: hotter
          in: query
          description: >
            Select processes with CPU utilization higher than specified.
          required: false
          schema:
            type: integer
        - name: sicker
          in: query
          description: >
            Select processes with fatal, critical and warning counters
            greater than specified.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: >
            An array of process information objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Processes"
        default:
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /subsystems/agents:
    get:
      description: >
        Activity report for all agents.
      summary: >
        Live agents activity report.
      operationId: listAgents
      tags:
        - agents
      responses:
        '200':
          description: Agents activity report object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subsystems"
        default:
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /subsystems/agents/{agentId}:
    get:
      description: >
        Activity report for a selected agent.
      summary: >
        Live agent activity report.
      operationId: listAgent
      tags:
        - agents
      parameters:
        - name: agentId
          in: path
          description: >
            Report activity for the agent with this `name`. A single agent can
            listen on multiple transport endpoints.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Agent activity report object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subsystem"
        default:
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /subsystems/endpoints:
    get:
      description: >
        Activity report for all endpoints.
      summary: >
        Live endpoints activity report.
      operationId: listEndpoints
      tags:
        - endpoints
      responses:
        '200':
          description: Endpoints activity report object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subsystems"
        default:
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /subsystems/endpoints/{endpointId}:
    get:
      description: >
        Activity report for a selected transport endpoint.
      summary: >
        Live endpoint activity report.
      operationId: listEndpoint
      tags:
        - endpoints
      parameters:
        - name: endpointId
          in: path
          description: >
            Report activity for transport endpoint with this `name`. Only one
            agent can listen on any single endpoint.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Endpoint activity report object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subsystem"
        default:
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /subsystems/recordings:
    get:
      description: >
        Activity report for all recordings.
      summary: >
        Live recordings activity report.
      operationId: listRecordings
      tags:
        - recordings
      responses:
        '200':
          description: Recordings activity report object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subsystems"
        default:
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /subsystems/recordings/{recordingId}:
    get:
      description: >
        Activity report for a selected recording.
      summary: >
        Live recording activity report.
      operationId: listRecording
      tags:
        - recordings
      parameters:
        - name: recordingId
          in: path
          description: >
            Report activity for recording with this `name`. Multiple
            agents can hit any single recording.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Recording activity report object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subsystem"
        default:
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Subsystem:
      description: >
        Activity information for a single subsystem such as agent/endpoint/recording.
      type: object
      properties:
        name:
          type: string
        first_hit:
          type: integer
        last_hit:
          type: integer
        counters:
          $ref: "#/components/schemas/Counters"

    Subsystems:
      description: >
        An array of subsystem activity information.
      type: array
      items:
        $ref: "#/components/schemas/Subsystem"

    Counters:
      description: >
        Activity counters.
      type: object
      properties:
        successful:
          description: >
            Number of successful operations since system initialization
          type: integer
        errored:
          description: >
            Number of failed operations since system initialization
          type: integer

    Process:
      description: >
        SNMP simulator system is composed of many running processes.
        This object describes common properties of a process.
      type: object
      properties:
        cmdline:
          description: >
            Path to process executable and its command-line parameters.
          type: string
        uptime:
          description: >
            How long this process has been up (in seconds).
          type: integer
        owner:
          description: >
            OS user:group owning this process.
          type: string
        memory:
          description: >
            How much virtual memory this process is consuming.
          type: integer
        cpu:
          description: >
            How much CPU this process is putting on CPU (last 1, 5, and
            15 minutes).
          type: integer
        files:
          description: >
            How many open files this process has.
          type: integer
        health:
          description: >
            How healthy this process has been lately in terms of the number
            of internal events occurred since process start. Warning-level
            expire automatically over time.
          type: object
          properties:
            fatal:
              type: integer
            critical:
              type: integer
            warning:
              type: integer
            info:
              type: integer

    Processes:
      description: >
        An array of process information.
      type: array
      items:
        $ref: "#/components/schemas/Process"

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
